{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Swagger WaterTraсker",
    "description": "Showing off WaterTraсker work",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://project-backend-7eyy.onrender.com" }, { "url": "http://localhost:3000" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User",
      "description": "User endpoints"
    },
    {
      "name": "WaterRate",
      "description": "User water rate endpoints"
    },
    {
      "name": "Water inputs",
      "description": "Total amount of water consumed by the User"
    },
    {
      "name": "Water",
      "description": "Water endpoint for adding, editing and deleting information about water input "
    },
    {
      "name": "Today",
      "description": "Endpoint for getting list of water consume and percentage of daily norma for today "
    },
    {
      "name": "Month",
      "description": "Endpoint for getting information of water consumption for the collected month "
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Signup's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New User Registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoWithTokenSingupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "409": {
            "description": "Email in use",
            "content": {}
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign in user",
        "parameters": [],
        "requestBody": {
          "description": "Signin's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sign in user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoWithTokenSinginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "User logout",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset user's password",
        "parameters": [],
        "requestBody": {
          "description": "User's email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResetPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "404": {
            "description": "Email not found",
            "content": {}
          }
        }
      }
    },
    "/user/add-avatars": {
      "patch": {
        "tags": ["User"],
        "summary": "Add user avatar",
        "parameters": [],
        "requestBody": {
          "description": "Upload file avatar",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UserChangeAvatarRequest"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Avatar's URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChangeAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "File not found, File extention not allow",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/user/current": {
      "get": {
        "tags": ["User"],
        "summary": "Current user",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Logged user returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/user/update/": {
      "patch": {
        "tags": ["User"],
        "summary": "Update user data",
        "parameters": [],
        "requestBody": {
          "description": "Update user",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangeInfoRequest"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Update user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserChangeInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Wrong password",
            "content": {}
          }
        }
      }
    },
    "/water-rate/": {
      "patch": {
        "tags": ["WaterRate"],
        "summary": "Change user's water rate",
        "parameters": [],
        "requestBody": {
          "description": "New water rate",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WaterRateRequest"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "New water rate value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WaterRateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/waterFields/": {
      "get": {
        "tags": ["Water fields"],
        "summary": "All water entries by User",
        "parameters": [
          { "in": "query", "name": "page" },
          { "in": "query", "name": "limit" }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllWaterInputsByUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/water/": {
      "post": {
        "tags": ["Water"],
        "summary": "Add info about water field",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Add new field of water",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddNewFieldRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Field add",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewFieldResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/water/{id}": {
      "delete": {
        "tags": ["Water"],
        "summary": "Delete info about water field",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Dynamic parameter ID of water input records."
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "201": {
            "description": "Delete success",
            "content": {}
          },
          "404": {
            "description": "Card with ${id} is not found",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/water/{id}/waterVolume": {
      "patch": {
        "tags": ["Water"],
        "summary": "Update info about water input",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Dynamic parameter ID of water input records."
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Update waterVolume",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditInputRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Input Successfully changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddNewInputResponse"
                }
              }
            }
          },
          "404": {
            "description": "Card with ${id} is not found",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/today/": {
      "get": {
        "tags": ["Today"],
        "summary": "Get list of water consume and percentage of daily norma of User for today",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsForToday"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/month/{monthNumber} ": {
      "get": {
        "tags": ["Month"],
        "summary": "Get list of water consume and percentage of daily norma of User for today",
        "parameters": [
          {
            "in": "path",
            "name": "monthNumber",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Month number for which information is requested",
            "minimum": 1,
            "maximum": 12
          }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {},
        "responses": {
          "200": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatisticsForMonth"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthRequest": {
        "type": "object",
        "required": ["name", "email", "password", "repeatPassword"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User name",
            "example": "Ajax"
          },
          "email": {
            "type": "string",
            "description": "User email",
            "format": "email",
            "example": "qweqwe@mail.com"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "example": "ww123456"
          },
          "repeatPassword": {
            "type": "string",
            "description": "User password",
            "example": "ww123456"
          }
        }
      },
      "AuthResetPasswordRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "UserChangeAvatarRequest": {
        "type": "object",
        "required": ["avatar"],
        "properties": {
          "avatar": {
            "type": "string",
            "description": "File of avatar",
            "format": "multipart/form-data"
          }
        }
      },
      "UserChangeInfoRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Ajax"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "male",
            "enum": ["male", "female"]
          },
          "oldPassword": {
            "type": "string",
            "description": "Old user's password",
            "example": "ww123456"
          },
          "newPassword": {
            "type": "string",
            "description": "New user's password",
            "example": "ww1234567"
          }
        }
      },
      "WaterRateRequest": {
        "type": "object",
        "required": ["waterRate"],
        "properties": {
          "waterRate": {
            "type": "integer",
            "description": "User's water rate",
            "example": 1800
          }
        }
      },
      "UserInfoDefaultResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": ""
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": ""
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "female",
            "enum": ["male", "female"]
          },
          "waterRate": {
            "type": "integer",
            "description": "User's daily water rate",
            "example": "1800"
          }
        }
      },
      "UserInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Ajax"
          },
          "avatarURL": {
            "type": "string",
            "description": "User's avatar",
            "example": "https://res.cloudinary.com/dipqgmp1j/image/upload/v1700162384/avatars/6556164717c36663106ef015.jpg"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "male",
            "enum": ["male", "female"]
          },
          "waterRate": {
            "type": "integer",
            "description": "User's daily water rate",
            "example": "1800"
          }
        }
      },

      "UserInfoWithTokenSingupResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTYxNjQ3MTdjMzY2NjMxMDZlZjAxNSIsImlhdCI6MTcwMDE0MDcyNCwiZXhwIjoxNzAwMjIzNTI0fQ.yjTBD2T5xa85HLfUSNS5bgdXKa_xvc68gn7Q7CMlbj4"
          },
          "user": {
            "$ref": "#/components/schemas/UserInfoDefaultResponse"
          }
        }
      },
      "UserInfoWithTokenSinginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Bearer token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTYxNjQ3MTdjMzY2NjMxMDZlZjAxNSIsImlhdCI6MTcwMDE0MDcyNCwiZXhwIjoxNzAwMjIzNTI0fQ.yjTBD2T5xa85HLfUSNS5bgdXKa_xvc68gn7Q7CMlbj4"
          },
          "user": {
            "$ref": "#/components/schemas/UserInfoResponse"
          }
        }
      },
      "UserChangeAvatarResponse": {
        "type": "object",
        "properties": {
          "avatarURL": {
            "type": "string",
            "description": "Avatar's URL",
            "example": "https://res.cloudinary.com/dipqgmp1j/image/upload/v1700162384/avatars/6556164717c36663106ef015.jpg"
          }
        }
      },
      "UserChangeInfoResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "userName": {
            "type": "string",
            "description": "User's name",
            "example": "Ajax"
          },
          "gender": {
            "type": "string",
            "description": "User's gender",
            "example": "male",
            "enum": ["male", "female"]
          }
        }
      },
      "WaterRateResponse": {
        "type": "object",
        "properties": {
          "waterRate": {
            "type": "integer",
            "description": "User's water rate",
            "example": 1800
          }
        }
      },
      "GetAllWaterInputsByUserResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "desctiption": "ID of water input records"
            },
            "waterVolume": {
              "type": "integer",
              "desctiption": "The portion of water consumed in a single entry."
            },
            "date": {
              "type": "string",
              "description": "Time of water intake."
            },
            "owner": {
              "type": "string",
              "description": "User's id"
            }
          }
        },
        "example": [
          {
            "_id": "655603ba61c5f2fa9290d616",
            "waterVolume": 50,
            "date": "2023-11-16T11:57:46.882+00:00",
            "owner": "655603ba61c5f2fa9290d616"
          },
          {
            "_id": "65553aa0c632b7201176baf6",
            "waterVolume": 100,
            "date": "2023-11-16T11:57:46.882+00:00",
            "owner": "65553aa0c632b7201176baf6"
          }
        ]
      },
      "GetTotalDataByCurrentDayResponse": {
        "type": "object",
        "properties": {
          "waterInputsForToday": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "ID of water input records"
                },
                "waterVolume": {
                  "type": "integer",
                  "description": "The portion of water consumed in a single entry."
                },
                "date": {
                  "type": "string",
                  "description": "Time of water input"
                },
                "owner": {
                  "type": "string",
                  "description": "User's id"
                }
              }
            }
          },
          "dailyNormFulfillment": {
            "type": "integer",
            "description": "Total daily water consumption fulfillment."
          }
        },
        "example": {
          "waterInputsForToday": [
            {
              "_id": "65552c689b99668f40656b07",
              "waterVolume": 1,
              "date": "2023-11-16T11:57:46.882+00:00",
              "owner": "65552c689b99668f40656b07"
            },
            {
              "_id": "65552c689b99668f40656b01",
              "waterVolume": 2,
              "date": "2023-11-16T11:57:46.882+00:00",
              "owner": "65552c689b99668f40656b01"
            }
          ],
          "dailyNormFulfillment": 50
        }
      },
      "AddNewInputRequest": {
        "type": "object",
        "required": ["waterVolume", "date"],
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "quantity of drunk water"
          },
          "date": {
            "type": "string",
            "description": "time of water input"
          }
        },
        "example": { "waterVolume": 900, "date": "2023-11-16T11:57:46.882+00:00" }
      },
      "AddNewInputResponse": {
        "type": "object",
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "The portion of water consumed in a single entry."
          },
          "date": {
            "type": "string",
            "description": "time of water input"
          },
          "owner": {
            "type": "string",
            "description": "User'd ID"
          },
          "_id": {
            "type": "string",
            "description": "ID of water input records"
          },

          "createdAt": {
            "type": "string",
            "description": "create time field in DB"
          },
          "updatedAt": {
            "type": "string",
            "description": "time update field in DB"
          }
        },
        "example": {
          "waterVolume": 900,
          "date": "2023-11-16T11:57:46.882+00:00",
          "owner": "654f6747c4faaae3bc185711",
          "_id": "6553d1774cfd0635de52d911",
          "createdAt": "2023-11-16T11:57:46.882+00:00",
          "updatedAt": "2023-11-16T11:57:46.882+00:00"
        }
      },
      "EditInputRequest": {
        "type": "object",
        "required": ["waterVolume"],
        "properties": {
          "waterVolume": {
            "type": "integer",
            "description": "quantity of drunk water",
            "example": 100
          }
        }
      },
      "GetStatisticsForToday": {
        "type": "object",
        "properties": {
          "waterInputsForToday": {
            "type": "array",
            "description": "All inputs of the water per current day",
            "items": {
              "type": "object",
              "properties": {
                "waterVolume": {
                  "type": "integer",
                  "description": "The portion of water consumed in a single entry."
                },
                "date": {
                  "type": "string",
                  "description": "Time of water input."
                },
                "owner": {
                  "type": "string",
                  "description": "User's ID."
                },
                "_id": {
                  "type": "string",
                  "description": "ID of water input records."
                }
              }
            }
          },
          "dailyNormFulfillment": {
            "type": "integer",
            "description": "Percentage of daily water rate fulfillment."
          }
        },
        "example": {
          "waterInputsForToday": [
            {
              "_id": "65548f162e039b83aff62c11",
              "waterVolume": 1000,
              "date": "2023-11-16T11:57:46.882+00:00",
              "owner": "654f6747c4faaae3bc185711"
            }
          ],
          "dailyNormFulfillment": 50
        }
      },
      "GetStatisticsForMonth": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "description": "Time and month of water field"
            },
            "waterRate": {
              "type": "integer",
              "description": "User's water rate"
            },
            "dailyNormFulfillment": {
              "type": "integer",
              "description": "Percentage of daily water rate fulfillment."
            },
            "servingOfWater": {
              "type": "integer",
              "description": "Quantity of inputs per day"
            }
          }
        },
        "example": [
          {
            "date": "10, October",
            "waterRate": 4,
            "dailyNormFulfillment": 47,
            "servingOfWater": 7
          },
          {
            "date": "14, October",
            "waterRate": 3,
            "dailyNormFulfillment": 55,
            "servingOfWater": 5
          }
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
